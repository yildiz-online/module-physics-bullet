cmake_minimum_required (VERSION 2.8.6)
project (yildiz_native_bullet)

set(CMAKE_CXX_FLAGS "-O2 -fPIC")

set(BULLET "${CMAKE_SOURCE_DIR}/../bullet/release/linux64")
set(BULLET_INCLUDE "${BULLET}/include")
set(BULLET_LIB "${BULLET}/lib")

find_package(JNI)
    
include_directories(${JAVA_INCLUDE_PATH})
include_directories(${JAVA_INCLUDE_PATH}/linux)
    
include_directories(${BULLET_INCLUDE})
include_directories(${BULLET_INCLUDE}/BulletCollision)
include_directories(${BULLET_INCLUDE}/BulletCollision/CollisionDispatch)
include_directories(${BULLET_INCLUDE}/BulletCollision/CollisionShapes)
include_directories(${BULLET_INCLUDE}/BulletCollision/Gimpact)
include_directories(${BULLET_INCLUDE}/BulletCollision/NarrowPhaseCollision)
include_directories(${BULLET_INCLUDE}/BulletDynamics)
include_directories(${BULLET_INCLUDE}/BulletDynamics/Character)
include_directories(${BULLET_INCLUDE}/BulletDynamics/ConstraintSolver)
include_directories(${BULLET_INCLUDE}/BulletDynamics/Dynamics)
include_directories(${BULLET_INCLUDE}/BulletDynamics/Vehicle)
include_directories(${BULLET_INCLUDE}/BulletFileLoader)
include_directories(${BULLET_INCLUDE}/BulletFileLoader/autogenerated)
include_directories(${BULLET_INCLUDE}/BulletMultiThreaded)
include_directories(${BULLET_INCLUDE}/BulletMultiThreaded/GpuSoftBodySolvers)
include_directories(${BULLET_INCLUDE}/BulletMultiThreaded/GpuSoftBodySolvers/DX11)
include_directories(${BULLET_INCLUDE}/BulletMultiThreaded/GpuSoftBodySolvers/DX11/HLSL)
include_directories(${BULLET_INCLUDE}/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL)
include_directories(${BULLET_INCLUDE}/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/AMD)
include_directories(${BULLET_INCLUDE}/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/Apple)
include_directories(${BULLET_INCLUDE}/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/Intel)
include_directories(${BULLET_INCLUDE}/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/MiniCL)
include_directories(${BULLET_INCLUDE}/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/NVidia)
include_directories(${BULLET_INCLUDE}/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/OpenCLC10)
include_directories(${BULLET_INCLUDE}/BulletMultiThreaded/GpuSoftBodySolvers/Shared)
include_directories(${BULLET_INCLUDE}/BulletMultiThreaded/out)
include_directories(${BULLET_INCLUDE}/BulletMultiThreaded/SpuNarrowPhaseCollisionTask)
include_directories(${BULLET_INCLUDE}/BulletMultiThreaded/SpuSampleTask)
include_directories(${BULLET_INCLUDE}/BulletSoftBody)
include_directories(${BULLET_INCLUDE}/BulletWorldImporter)
include_directories(${BULLET_INCLUDE}/BulletXmlWorldImporter)
include_directories(${BULLET_INCLUDE}/ConvexDecomposition)
include_directories(${BULLET_INCLUDE}/GIMPACTUtils)
include_directories(${BULLET_INCLUDE}/HACD)
include_directories(${BULLET_INCLUDE}/LinearMath)
include_directories(${BULLET_INCLUDE}/MiniCL)
include_directories(${BULLET_INCLUDE}/MiniCL/MiniCLTask)
include_directories(${BULLET_INCLUDE}/vectormath)
include_directories(${BULLET_INCLUDE}/vectormath/scalar)
include_directories(${BULLET_INCLUDE}/vectormath/sse)

#Set all source file in variable source_files.
file(
    GLOB_RECURSE
    source_files
    ${CMAKE_SOURCE_DIR}/../../c++/*.cpp
    ${CMAKE_SOURCE_DIR}/../../includes/*.h
)

#set dynamic lib as output, name is bullet and sources dem source_files variable are used.
add_library(bullet SHARED ${source_files})
add_definitions(-O2)

target_link_libraries(bullet ${BULLET_LIB}/libBulletWorldImporter.a)
target_link_libraries(bullet ${BULLET_LIB}/libBulletFileLoader.a)
target_link_libraries(bullet ${BULLET_LIB}/libBulletDynamics.a)
target_link_libraries(bullet ${BULLET_LIB}/libBulletCollision.a)
target_link_libraries(bullet ${BULLET_LIB}/libLinearMath.a)
